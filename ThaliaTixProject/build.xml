<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
	<project basedir="." default="build" name="ThaliaTixProject" xmlns:jacoco="antlib:org.jacoco.ant">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
              	
  	<property name="src.dir" location="./src/thaliatix" />
	<property name="result.dir" location="./report" />
	<property name="result.classes.dir" location="${result.dir}/classes" />
	<property name="result.report.dir" location="${result.dir}/site/jacoco" />
	<property name="result.exec.file" location="${result.dir}/jacoco.exec" />
              	
    <path id="Web App Libraries.libraryclasspath">
        <pathelement location="WebContent/WEB-INF/lib/gson-2.6.2.jar"/>
        <pathelement location="WebContent/WEB-INF/lib/jacocoant.jar"/>
        <pathelement location="WebContent/WEB-INF/lib/jersey-bundle-1.19.1.jar"/>
        <pathelement location="WebContent/WEB-INF/lib/jsr311-api-1.1.1.jar"/>
        <pathelement location="WebContent/WEB-INF/lib/junit.jar"/>
        <pathelement location="WebContent/WEB-INF/lib/org.apiguardian_1.0.0.v20170910-2246.jar"/>
        <pathelement location="WebContent/WEB-INF/lib/org.hamcrest.core_1.3.0.v201303031735.jar"/>
        <pathelement location="WebContent/WEB-INF/lib/org.junit.jupiter.api_5.0.0.v20170910-2246.jar"/>
        <pathelement location="WebContent/WEB-INF/lib/org.junit.jupiter.engine_5.0.0.v20170910-2246.jar"/>
        <pathelement location="WebContent/WEB-INF/lib/org.junit.jupiter.migrationsupport_5.0.0.v20170910-2246.jar"/>
        <pathelement location="WebContent/WEB-INF/lib/org.junit.jupiter.params_5.0.0.v20170910-2246.jar"/>
        <pathelement location="WebContent/WEB-INF/lib/org.junit.platform.commons_1.0.0.v20170910-2246.jar"/>
        <pathelement location="WebContent/WEB-INF/lib/org.junit.platform.engine_1.0.0.v20170910-2246.jar"/>
        <pathelement location="WebContent/WEB-INF/lib/org.junit.platform.launcher_1.0.0.v20170910-2246.jar"/>
        <pathelement location="WebContent/WEB-INF/lib/org.junit.platform.runner_1.0.0.v20170910-2246.jar"/>
        <pathelement location="WebContent/WEB-INF/lib/org.junit.platform.suite.api_1.0.0.v20170910-2246.jar"/>
        <pathelement location="WebContent/WEB-INF/lib/org.junit.vintage.engine_4.12.0.v20170910-2246.jar"/>
        <pathelement location="WebContent/WEB-INF/classes"/>
    </path>
    <path id="EAR Libraries.libraryclasspath"/>
    <path id="JUnit 5.libraryclasspath">
        <pathelement location="../../.p2/pool/plugins/org.junit.jupiter.api_5.0.0.v20170910-2246.jar"/>
        <pathelement location="../../.p2/pool/plugins/org.junit.jupiter.engine_5.0.0.v20170910-2246.jar"/>
        <pathelement location="../../.p2/pool/plugins/org.junit.jupiter.migrationsupport_5.0.0.v20170910-2246.jar"/>
        <pathelement location="../../.p2/pool/plugins/org.junit.jupiter.params_5.0.0.v20170910-2246.jar"/>
        <pathelement location="../../.p2/pool/plugins/org.junit.platform.commons_1.0.0.v20170910-2246.jar"/>
        <pathelement location="../../.p2/pool/plugins/org.junit.platform.engine_1.0.0.v20170910-2246.jar"/>
        <pathelement location="../../.p2/pool/plugins/org.junit.platform.launcher_1.0.0.v20170910-2246.jar"/>
        <pathelement location="../../.p2/pool/plugins/org.junit.platform.runner_1.0.0.v20170910-2246.jar"/>
        <pathelement location="../../.p2/pool/plugins/org.junit.platform.suite.api_1.0.0.v20170910-2246.jar"/>
        <pathelement location="../../.p2/pool/plugins/org.junit.vintage.engine_4.12.0.v20170910-2246.jar"/>
        <pathelement location="../../.p2/pool/plugins/org.opentest4j_1.0.0.v20170910-2246.jar"/>
        <pathelement location="../../.p2/pool/plugins/org.apiguardian_1.0.0.v20170910-2246.jar"/>
        <pathelement location="../../.p2/pool/plugins/org.junit_4.12.0.v201504281640/junit.jar"/>
        <pathelement location="../../.p2/pool/plugins/org.hamcrest.core_1.3.0.v201303031735.jar"/>
    </path>
    <path id="ThaliaTixProject.classpath">
        <pathelement location="build/classes"/>
        <path refid="Web App Libraries.libraryclasspath"/>
        <path refid="EAR Libraries.libraryclasspath"/>
        <pathelement location="WebContent/WEB-INF/lib/junit.jar"/>
        <pathelement location="WebContent/WEB-INF/lib/junit.jar"/>
        <pathelement location="WebContent/WEB-INF/lib/org.junit.jupiter.api_5.0.0.v20170910-2246.jar"/>
        <path refid="JUnit 5.libraryclasspath"/>
    </path>
              	
  	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
  	        <classpath path="WebContent/WEB-INF/lib/jacocoant.jar"/>
  	</taskdef>
              	
    <target name="init">
        <mkdir dir="build/classes"/>
        <copy includeemptydirs="false" todir="build/classes">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="build/classes"/>
    	<delete dir="report/classes"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build">
    	<mkdir dir="${result.classes.dir}" />
    	<javac srcdir="${src.dir}" destdir="${result.classes.dir}" debug="true" includeantruntime="false">
    		<src path="src/thaliatix"/>	
    		<classpath refid="ThaliaTixProject.classpath"/>
    	</javac>
    </target>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="build/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="ThaliaTixProject.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target name="thaliatix">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <jvmarg line="-ea"/>
            <classpath refid="ThaliaTixProject.classpath"/>
        </junit>
    </target>
              	
  	<target name="test" depends="build">
		<!-- Step 2: Wrap test execution with the JaCoCo coverage task -->
		<jacoco:coverage destfile="${result.exec.file}">
			<java classname="thaliatix.TestRunner" fork="true" failonerror="true">
				<classpath refid="ThaliaTixProject.classpath"/>
			</java>
		</jacoco:coverage>
	</target>

	<target name="report" depends="test">
			<!-- Step 3: Create coverage report -->
			<jacoco:report>

				<!-- This task needs the collected execution data and ... -->
				<executiondata>
					<file file="${result.exec.file}" />
				</executiondata>

				<!-- the class files and optional source files ... -->
				<structure name="JaCoCo Ant Example">
					<classfiles>
						<fileset dir="${result.classes.dir}" />
					</classfiles>
					<sourcefiles encoding="UTF-8">
						<fileset dir="${src.dir}" />
					</sourcefiles>
				</structure>

				<!-- to produce reports in different formats. -->
				<html destdir="${result.report.dir}" />
				<csv destfile="${result.report.dir}/report.csv" />
				<xml destfile="${result.report.dir}/report.xml" />
			</jacoco:report>
		</target>   	
              	
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
		
		<target name="war" description="Bundles the application as a WAR file" depends="clean, build">
		    <mkdir dir="WebContent/WEB-INF/classes"/>
		     
		    <copy includeemptydirs="false" todir="WebContent/WEB-INF/classes">
		            <fileset dir="build/classes">
		            <include name="**/*.class"/>
		            </fileset>
		    </copy>
		     
		    <war destfile="Thalia.war"
		        basedir="WebContent"
		        needxmlfile="false">
		    </war>
		</target>
</project>
